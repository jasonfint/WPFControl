<Window x:Class="Animation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Animation"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1800">
    <Window.Resources>
        <Style x:Key="ResourcesButtonStyle" TargetType="{x:Type FrameworkElement}" >
            <Style.Triggers>
                <EventTrigger RoutedEvent="GotFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                  Storyboard.TargetProperty="(FrameworkElement.Effect).(DropShadowEffect.BlurRadius)" 
                  From="0" To="100" 
                  BeginTime="00:00:00" Duration="00:00:01" 
                  AutoReverse="True"  RepeatBehavior="Forever"/>

                            <ColorAnimationUsingKeyFrames 
                  Storyboard.TargetProperty="(FrameworkElement.Effect).(DropShadowEffect.Color)"
                  RepeatBehavior="Forever" AutoReverse="True">
                                <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="Purple"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.8" Value="Green"/>
                                <EasingColorKeyFrame KeyTime="0:0:1.2" Value="DarkCyan"/>
                                <EasingColorKeyFrame KeyTime="0:0:1.6" Value="Black"/>
                                <EasingColorKeyFrame KeyTime="0:0:2.0" Value="OrangeRed"/>
                                <EasingColorKeyFrame KeyTime="0:0:2.4" Value="Violet"/>
                                <EasingColorKeyFrame KeyTime="0:0:2.8" Value="CornflowerBlue"/>
                                <EasingColorKeyFrame KeyTime="0:0:3.2" Value="Lime"/>
                                <EasingColorKeyFrame KeyTime="0:0:3.6" Value="Azure"/>
                                <EasingColorKeyFrame KeyTime="0:0:4.0" Value="Turquoise"/>
                                <EasingColorKeyFrame KeyTime="0:0:4.4" Value="Tomato"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect x:Name="OSE" BlurRadius="10" 
                                      Color="Lime" Direction="0"   
                                      Opacity="1" 
                                      RenderingBias="Performance" 
                                      ShadowDepth="0" >
                        <Storyboard.TargetProperty>
                            BlurRadius
                        </Storyboard.TargetProperty>
                    </DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>
      
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="0">
            <Path Stroke="Black" StrokeThickness="1" Fill="LemonChiffon" VerticalAlignment="Top">
                <Path.Data>
                    <RectangleGeometry x:Name="myRectangleGeometry" Rect="0,200,100,100" />
                </Path.Data>
                <Path.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>

                                <!--Animate the Rect property of the RectangleGeometry which causes the
              rectangle to animate its position as well as its width and height.-->
                                <RectAnimationUsingKeyFrames
                Storyboard.TargetName="myRectangleGeometry"
                Storyboard.TargetProperty ="Rect"
                Duration="0:0:6" FillBehavior="HoldEnd" RepeatBehavior="Forever">

                                    <!--Animate position, width, and height in first 2 seconds. LinearRectKeyFrame creates
                a smooth, linear animation between values.-->
                                    <LinearRectKeyFrame Value="600,50,200,50" KeyTime="0:0:2" />

                                    <!--In the next half second, change height to 10. DiscreteRectKeyFrame creates a 
                sudden "jump" between values.-->
                                    <DiscreteRectKeyFrame Value="600,50,200,10" KeyTime="0:0:2.5" />

                                    <!--In the final 2 seconds of the animation, go back to the starting position, width, and height.  
                Spline key frames like SplineRectKeyFrame creates a variable transition between values depending 
                on the KeySpline property. In this example, the animation starts off slow but toward the end of 
                the time segment, it speeds up exponentially.-->
                                    <SplineRectKeyFrame Value="0,200,100,100" KeyTime="0:0:4.5" KeySpline="0.6,0.0 0.9,0.00"  />
                                </RectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Path.Triggers>

            </Path>
        </StackPanel>
        <StackPanel Grid.Column="1">
            <TextBlock>
        Click the button to animate its IsEnabled property with a 
        BooleanAnimationUsingKeyFrames animation.
            </TextBlock>
            <Button Name="myAnimatedButton" >Click Me
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames 
                Storyboard.TargetName="myAnimatedButton" 
                Storyboard.TargetProperty="IsEnabled"
                Duration="0:0:4" FillBehavior="HoldEnd">

                                    <!-- All the key frames below are DiscreteBooleanKeyFrames. Discrete key frames create 
                sudden "jumps" between values (no interpolation). Only discrete key frames can be used 
                for Boolean key frame animations. -->
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:1" />
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:2" />
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:3" />
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:3.5" />
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:4" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </StackPanel>
        <StackPanel  Grid.Column="2">
            <Rectangle 
      Canvas.Top="100"
      Canvas.Left="10"
      Height="100"
      Width="100"
      Stroke="Black"
      StrokeThickness="5">
                <Rectangle.RenderTransform>
                    <TranslateTransform x:Name="AnimatedTranslateTransform" />
                </Rectangle.RenderTransform>

                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Rectangle.Loaded">
                        <BeginStoryboard>
                            <Storyboard>

                                <!-- Animate the TranslateTransform.X property using 3 KeyFrames
                   which animates the rectangle along a straight line. 
                   This animation repeats indefinitely. -->
                                <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="AnimatedTranslateTransform"
                Storyboard.TargetProperty="X"
                Duration="0:0:6"
                RepeatBehavior="Forever">

                                    <!-- Using a LinearDoubleKeyFrame, the rectangle moves 
                     steadily from its starting position to 500 over 
                     the first 3 seconds.  -->
                                    <LinearDoubleKeyFrame Value="500" KeyTime="0:0:3" />

                                    <!-- Using a DiscreteDoubleKeyFrame, the rectangle suddenly 
                     appears at 400 after the fourth second of the animation. -->
                                    <DiscreteDoubleKeyFrame Value="400" KeyTime="0:0:4" />

                                    <!-- Using a SplineDoubleKeyFrame, the rectangle moves 
                     back to its starting point. The
                     animation starts out slowly at first and then speeds up. 
                     This KeyFrame ends after the 6th
                     second. -->
                                    <SplineDoubleKeyFrame KeySpline="0.6,0.0 0.9,0.00" Value="0" KeyTime="0:0:6" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>
        </StackPanel>
        <StackPanel  Grid.Column="3">
            <Canvas Width="100" Height="100">
                <Path Fill="Blue">
                    <Path.Data>
                        <!-- Describes an ellipse. -->
                        <EllipseGeometry x:Name="MyAnimatedEllipseGeometry"
          Center="200,100" RadiusX="15" RadiusY="15" />
                    </Path.Data>
                    <Path.Triggers>
                        <EventTrigger RoutedEvent="Path.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Animating the Center property uses 3 KeyFrames, which animate
                   the ellipse allong a triangular path. -->
                                    <PointAnimationUsingKeyFrames
                Storyboard.TargetProperty="Center"
                Storyboard.TargetName="MyAnimatedEllipseGeometry"
                Duration="0:0:5" RepeatBehavior="Forever">
                                        <!-- Over the first half second, Using a LinearPointKeyFrame, the ellipse 
                     moves steadily from its starting position along the first line of the 
                     trianglar path.  -->
                                        <LinearPointKeyFrame 
                  KeyTime="0:0:0.5"
                  Value="100,300" />
                                        <!-- Using a DiscretePointKeyFrame, the ellipse suddenly changes position
                     after the first second of the animation. -->
                                        <DiscretePointKeyFrame 
                  KeyTime="0:0:1"
                  Value="400,300" />
                                        <!-- Using a SplinePointKeyFrame, the ellipse moves back to its starting
                     position. It moves slowly at first and then speeds up. This key frame 
                     takes 2 seconds to complete. -->
                                        <SplinePointKeyFrame 
                  KeySpline="0.6,0.0 0.9,0.00" 
                  KeyTime="0:0:3"
                  Value="200,100" />
                                    </PointAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                </Path>
            </Canvas>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <Path Stroke="Black" StrokeThickness="1" Fill="LemonChiffon">
                <Path.Data>
                    <RectangleGeometry x:Name="myRectangleGeometry1" Rect="0,400,100,100" />
                </Path.Data>
                <Path.Triggers>
                    <EventTrigger RoutedEvent="Path.Loaded">
                        <BeginStoryboard>
                            <Storyboard>

                                <!-- Animate the Rect property of the RectangleGeometry which causes the
              rectangle to animate its position as well as its width and height. -->
                                <RectAnimationUsingKeyFrames
                Storyboard.TargetName="myRectangleGeometry"
                Storyboard.TargetProperty ="Rect"
                Duration="0:0:6" FillBehavior="HoldEnd" RepeatBehavior="Forever">

                                    <!-- Animate position, width, and height in first 2 seconds. LinearRectKeyFrame creates
                a smooth, linear animation between values. -->
                                    <LinearRectKeyFrame Value="600,50,200,50" KeyTime="0:0:2" />

                                    <!-- In the next half second, change height to 10. DiscreteRectKeyFrame creates a 
                sudden "jump" between values. -->
                                    <DiscreteRectKeyFrame Value="600,50,200,10" KeyTime="0:0:2.5" />

                                    <!-- In the final 2 seconds of the animation, go back to the starting position, width, and height.  
                Spline key frames like SplineRectKeyFrame creates a variable transition between values depending 
                on the KeySpline property. In this example, the animation starts off slow but toward the end of 
                the time segment, it speeds up exponentially.-->
                                    <SplineRectKeyFrame Value="0,200,100,100" KeyTime="0:0:4.5" KeySpline="0.6,0.0 0.9,0.00"  />
                                </RectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Path.Triggers>
            </Path>
        </StackPanel>
        <StackPanel Orientation="Vertical" VerticalAlignment="Top"  Grid.Row="2">
            <Button Name="myAnimatedButton2" Margin="100"
      FontSize="16pt" FontFamily="Verdana">Some Text
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <StringAnimationUsingKeyFrames 
                Storyboard.TargetName="myAnimatedButton2" Storyboard.TargetProperty="(Button.Content)"
                Duration="0:0:8" FillBehavior="HoldEnd">

                                    <!-- All the key frames below are DiscreteStringKeyFrames. Discrete key frames create 
                sudden "jumps" between values (no interpolation). Only discrete key frames can be used 
                for String key frame animations. -->
                                    <DiscreteStringKeyFrame Value="" KeyTime="0:0:0" />
                                    <DiscreteStringKeyFrame Value="A" KeyTime="0:0:1" />
                                    <DiscreteStringKeyFrame Value="An" KeyTime="0:0:1.5" />
                                    <DiscreteStringKeyFrame Value="Ani" KeyTime="0:0:2" />
                                    <DiscreteStringKeyFrame Value="Anim" KeyTime="0:0:2.5" />
                                    <DiscreteStringKeyFrame Value="Anima" KeyTime="0:0:3" />
                                    <DiscreteStringKeyFrame Value="Animat" KeyTime="0:0:3.5" />
                                    <DiscreteStringKeyFrame Value="Animate" KeyTime="0:0:4" />
                                    <DiscreteStringKeyFrame Value="Animated" KeyTime="0:0:4.5" />
                                    <DiscreteStringKeyFrame Value="Animated " KeyTime="0:0:5" />
                                    <DiscreteStringKeyFrame Value="Animated T" KeyTime="0:0:5.5" />
                                    <DiscreteStringKeyFrame Value="Animated Te" KeyTime="0:0:6" />
                                    <DiscreteStringKeyFrame Value="Animated Tex" KeyTime="0:0:6.5" />
                                    <DiscreteStringKeyFrame Value="Animated Text" KeyTime="0:0:7" />
                                </StringAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </StackPanel>
        <Canvas HorizontalAlignment="Left" Margin="0" Grid.Row="2" Grid.Column="2">

            <!-- Create an arc on the screen that animates its size when it loads. -->
            <Path Stroke="Black" StrokeThickness="2" >
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="100,200">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <ArcSegment x:Name="myArcSegment" Size="90,80" 
                      SweepDirection="Clockwise"  Point="500,200" />
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
                <Path.Triggers>
                    <EventTrigger RoutedEvent="Path.Loaded">
                        <BeginStoryboard Name="myBeginStoryBoard">
                            <Storyboard>

                                <!-- Animating the Size property uses 3 KeyFrames. -->
                                <SizeAnimationUsingKeyFrames
                Storyboard.TargetName="myArcSegment"
                Storyboard.TargetProperty="Size" >
                                    <SizeAnimationUsingKeyFrames.KeyFrames>
                                        <!-- Using a LinearSizeKeyFrame, the size of the arc increases
                         gradually over the first half second of the animation. -->
                                        <LinearSizeKeyFrame KeyTime="0:0:0.5" Value="120,120" />

                                        <!-- Using a DiscreteSizeKeyFrame, the size increases suddenly
                    after the first second of the animation. -->
                                        <DiscreteSizeKeyFrame KeyTime="0:0:1" Value="150,150" />

                                        <!-- Using a SplineSizeKeyFrame, the Size increases slowly at first 
                         and then speeds up exponentially. This KeyFrame takes 2 seconds. -->
                                        <SplineSizeKeyFrame KeySpline="0.6,0.0 0.9,0.00" KeyTime="0:0:3" Value="300,300" />

                                    </SizeAnimationUsingKeyFrames.KeyFrames>
                                </SizeAnimationUsingKeyFrames>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Path.Triggers>
            </Path>
        </Canvas>
       
            <Rectangle Fill="Blue" Stroke="Black" StrokeThickness="5" Grid.Row="3" Grid.Column="2"
  Width="50" Height="50">
            <Rectangle.RenderTransform>
                <TranslateTransform x:Name="TranslateTransform1" />
            </Rectangle.RenderTransform>
            <Rectangle.Triggers>
                <EventTrigger RoutedEvent="Rectangle.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames 
            Storyboard.TargetName="TranslateTransform1" 
            Storyboard.TargetProperty="X"
            Duration="0:0:10">

                                <!-- These KeyTime properties are specified as TimeSpan values 
                 which are in the form of "hours:minutes:seconds". -->
                                <LinearDoubleKeyFrame Value="100" KeyTime="0:0:3" />
                                <LinearDoubleKeyFrame Value="300" KeyTime="0:0:4" />
                                <LinearDoubleKeyFrame Value="500" KeyTime="0:0:10" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Rectangle.Triggers>
        </Rectangle>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Grid.Row="2" Grid.Column="1">
            <Border Background="#99FFFFFF" BorderBrush="#CCCCFF" BorderThickness="1"
    Margin="0,60,0,20" Padding="20"  >
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>

                                <!-- Animating the BorderThickness property uses 3 KeyFrames. -->
                                <ThicknessAnimationUsingKeyFrames
                Storyboard.TargetProperty="BorderThickness"
                Duration="0:0:5" FillBehavior="HoldEnd" RepeatBehavior="Forever">
                                    <ThicknessAnimationUsingKeyFrames.KeyFrames>

                                        <!-- Using a LinearThicknessKeyFrame, thickness increases gradually
                  over the first half second of the animation. -->
                                        <LinearThicknessKeyFrame KeyTime="0:0:0.5">
                                            <LinearThicknessKeyFrame.Value>
                                                <Thickness Left="8" Right="8" Top="6" Bottom="6" />
                                            </LinearThicknessKeyFrame.Value>
                                        </LinearThicknessKeyFrame>

                                        <!-- Using a DiscreteThicknessKeyFrame, thickness increases suddenly
                  after the first second of the animation. -->
                                        <DiscreteThicknessKeyFrame KeyTime="0:0:1">
                                            <DiscreteThicknessKeyFrame.Value>
                                                <Thickness Left="28" Right="28" Top="24" Bottom="24" />
                                            </DiscreteThicknessKeyFrame.Value>
                                        </DiscreteThicknessKeyFrame>

                                        <!-- Using a SplineThicknessKeyFrame, thickness decreases slowly at first
                  and then suddenly contracts. This KeyFrame takes 2 seconds. -->
                                        <SplineThicknessKeyFrame KeySpline="0.6,0.0 0.9,0.00" KeyTime="0:0:3">
                                            <SplineThicknessKeyFrame.Value>
                                                <Thickness Left="1" Right="1" Top="1" Bottom="8" />
                                            </SplineThicknessKeyFrame.Value>
                                        </SplineThicknessKeyFrame>

                                    </ThicknessAnimationUsingKeyFrames.KeyFrames>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>

                <TextBlock>
        This example shows how to use the ThicknessAnimationUsingKeyFrames to create
        an animation on the BorderThickness property of a Border.
                </TextBlock>
            </Border>

        </StackPanel>
        <Button Content="Yellow"   
                Style="{StaticResource ResourcesButtonStyle}" 
                Background="Yellow"  Grid.Row="2" Grid.Column="3"/>
        <!--<Grid.Triggers>
            <EventTrigger RoutedEvent="Grid.Loaded">
                <BeginStoryboard>
                    <Storyboard>

                        --><!-- ObjectAnimationUsingKeyFrames is used to animate properties that take
                 an object as a value. This animation lasts for 4 seconds using 3 KeyFrames which
                 swap different brush objects at regular intervals, making the background of the Page
                 change. --><!--
                        <ObjectAnimationUsingKeyFrames
              Storyboard.TargetProperty="Background"
              Duration="0:0:4" RepeatBehavior="Forever">
                            <ObjectAnimationUsingKeyFrames.KeyFrames>

                                --><!-- Note: Only discrete interpolation (DiscreteObjectKeyFrame) is available for 
              use with ObjectAnimationUsingKeyFrames which merely swaps objects according to
              a specified timeline. Other types of interpolation are too problematic to apply
              to objects.  -->

                                <!-- Using a DiscreteObjectKeyFrame, the Page Background suddenly changes 
                   to a LinearGradientBrush after the first second of the animation. --><!--
                                <DiscreteObjectKeyFrame KeyTime="0:0:1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="Yellow" Offset="0.0" />
                                                <GradientStop Color="Orange" Offset="0.5" />
                                                <GradientStop Color="Red" Offset="1.0" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>

                                --><!-- Using a DiscreteObjectKeyFrame, the Page Background suddenly changes 
                   to a RadialGradientBrush after the second second of the animation. --><!--
                                <DiscreteObjectKeyFrame KeyTime="0:0:2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RadialGradientBrush GradientOrigin="0.75,0.25">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Color="White" Offset="0.0" />
                                                <GradientStop Color="MediumBlue" Offset="0.5" />
                                                <GradientStop Color="Black" Offset="1.0" />
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>

                                --><!-- Using a DiscreteObjectKeyFrame, the Page Background suddenly 
                   changes to a DrawingBrush (creates a checkerboard pattern) after the 
                   third second of the animation. --><!--
                                <DiscreteObjectKeyFrame KeyTime="0:0:3">
                                    <DiscreteObjectKeyFrame.Value>
                                        <DrawingBrush Viewport="0,0,0.25,0.25" TileMode="Tile">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Brush="White">
                                                            <GeometryDrawing.Geometry>
                                                                <RectangleGeometry Rect="0,0,1,1" />
                                                            </GeometryDrawing.Geometry>
                                                        </GeometryDrawing>
                                                        <GeometryDrawing Brush="Black"
                           Geometry="M 0,0 L0,0.5 0.5,0.5 0.5,1 1,1 1,0.5 0.5,0.5 0.5,0" />
                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>-->
    </Grid>
   

</Window>
